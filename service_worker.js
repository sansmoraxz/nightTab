(()=>{"use strict";const e=async function(e,t){let n=await caches.match(t.request),s=t.request;if(void 0!==n)return n;{const t=await fetch(s),n=t.clone(),a=await caches.open(e);return await a.put(s,n),t}},t=async function(e,t){let n=t.request;try{const t=await fetch(n),s=t.clone(),a=await caches.open(e);return await a.put(n,s),t}catch(e){return caches.match(t.request)}},n=[{url:/^chrome-extension:.*$/i,handle:async function(e,t){return fetch(t.request)}},{url:/^https:\/\/\w*\.github\.io\/nightTab\/.*$/i,handle:e},{url:/^(ftp|https?):.*\.(jpe?g|png|gif|svg)($|\?.*)/i,handle:e},{url:/^(ftp|https?):.*\.(mp\d|webm|ogg|wav|flac)($|\?.*)/i,handle:e},{url:/^(ftp|https?):.*\.(ttf|otf|woff\d?)($|\?.*)/i,handle:e},{url:/^(ftp|https?):.*\.([jt]sp?|css|html?)($|\?.*)/i,handle:t},{url:/^(ftp|https?):.*\.(csv|json|txt|xml)($|\?.*)/i,handle:t},{url:/.+/i,handle:e}],s="nightTab";self.addEventListener("install",(e=>{console.log("serviceWorker installing..."),e.waitUntil((async()=>{await caches.delete(s),await caches.open(s).then((e=>{chrome?.extension?console.log("running in chrome extension, nothing to cache"):e.addAll(["/","/index.html"])})),console.log("serviceWorker installed...")}))})),self.addEventListener("fetch",(e=>{"GET"!==e.request.method&&e.respondWith(fetch(e.request));let t=n.find((t=>t.url.test(e.request.url)));console.log("fetch event ",e.request.url," with ",t.handle.name),e.respondWith(t.handle(s,e))}))})();